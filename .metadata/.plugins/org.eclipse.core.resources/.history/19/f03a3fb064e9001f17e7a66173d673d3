#include <stdint.h>
#include <stdio.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

uint32_t *NVIC_PRI = (uint32_t*)0xE000E400; // Priority register
uint32_t *NVIC_ISER = (uint32_t*)0xE000E100; // Interrupt Set-Enable register
uint32_t *NVIC_ISPR = (uint32_t*)0xE000E200; // Interrupt Pending register

#define RCC         23
#define EXTI0           20

void configure_interrupts(uint32_t IN, uint32_t Ipri)
{
    // Find the Priority register
    uint32_t Pr = IN / 4;
    uint32_t pos = (IN % 4) * 8;
    uint32_t *ptr = NVIC_PRI + Pr;

    *ptr &= ~(0xFF << pos);  // Clear previous priority
    *ptr |= (Ipri << pos);   // Set new priority
}

int main()
{
    configure_interrupts(TIMER2, 1);  // Configure Timer2 interrupt
    configure_interrupts(I2C1, 2);    // Configure I2C1 interrupt

    // Set the interrupt enable bits
    *NVIC_ISER |= (1 << TIMER2);
    *NVIC_ISER |= (1 << I2C1);

    // Set pending register for TIMER2
    *NVIC_ISPR |= (1 << TIMER2);

    return 0;
}

void WWDG_IRQHandler()
{
	printf("WWDG Handler \n");
}

void PVD_IRQHandler()
{
	printf("PVD Handler \n");
}

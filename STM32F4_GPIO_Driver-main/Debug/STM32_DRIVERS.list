
STM32_DRIVERS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000074c  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080008d4  080008dc  000018dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080008d4  080008d4  000018dc  2**0
                  CONTENTS
  4 .ARM          00000000  080008d4  080008d4  000018dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080008d4  080008dc  000018dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080008d4  080008d4  000018d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080008d8  080008d8  000018d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000018dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000018dc  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000018dc  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009cd  00000000  00000000  00001906  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000028f  00000000  00000000  000022d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  00002568  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000085  00000000  00000000  00002628  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001645  00000000  00000000  000026ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000fd9  00000000  00000000  00003cf2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000050fb  00000000  00000000  00004ccb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00009dc6  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000024c  00000000  00000000  00009e0c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000050  00000000  00000000  0000a058  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080008bc 	.word	0x080008bc

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080008bc 	.word	0x080008bc

080001c8 <GPIO_ClockControl>:

/*
 * GPIO clock control
 */
void GPIO_ClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]
 80001d0:	460b      	mov	r3, r1
 80001d2:	70fb      	strb	r3, [r7, #3]
    if(EnorDi == ENABLE)
 80001d4:	78fb      	ldrb	r3, [r7, #3]
 80001d6:	2b01      	cmp	r3, #1
 80001d8:	d16d      	bne.n	80002b6 <GPIO_ClockControl+0xee>
    {
    	if(pGPIOx == GPIOA)
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a6f      	ldr	r2, [pc, #444]	@ (800039c <GPIO_ClockControl+0x1d4>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d106      	bne.n	80001f0 <GPIO_ClockControl+0x28>
    	{
            GPIOA_CLK_EN();
 80001e2:	4b6f      	ldr	r3, [pc, #444]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 80001e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001e6:	4a6e      	ldr	r2, [pc, #440]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 80001e8:	f043 0301 	orr.w	r3, r3, #1
 80001ec:	6313      	str	r3, [r2, #48]	@ 0x30
       else if(pGPIOx == GPIOI)
    	   {
    	     GPIOI_CLK_DI();
    	   }
    }
}
 80001ee:	e0cf      	b.n	8000390 <GPIO_ClockControl+0x1c8>
    	else if(pGPIOx == GPIOB)
 80001f0:	687b      	ldr	r3, [r7, #4]
 80001f2:	4a6c      	ldr	r2, [pc, #432]	@ (80003a4 <GPIO_ClockControl+0x1dc>)
 80001f4:	4293      	cmp	r3, r2
 80001f6:	d106      	bne.n	8000206 <GPIO_ClockControl+0x3e>
    		GPIOB_CLK_EN();
 80001f8:	4b69      	ldr	r3, [pc, #420]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 80001fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001fc:	4a68      	ldr	r2, [pc, #416]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 80001fe:	f043 0302 	orr.w	r3, r3, #2
 8000202:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000204:	e0c4      	b.n	8000390 <GPIO_ClockControl+0x1c8>
    	else if(pGPIOx == GPIOC)
 8000206:	687b      	ldr	r3, [r7, #4]
 8000208:	4a67      	ldr	r2, [pc, #412]	@ (80003a8 <GPIO_ClockControl+0x1e0>)
 800020a:	4293      	cmp	r3, r2
 800020c:	d106      	bne.n	800021c <GPIO_ClockControl+0x54>
    	    GPIOC_CLK_EN();
 800020e:	4b64      	ldr	r3, [pc, #400]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000210:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000212:	4a63      	ldr	r2, [pc, #396]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000214:	f043 0304 	orr.w	r3, r3, #4
 8000218:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800021a:	e0b9      	b.n	8000390 <GPIO_ClockControl+0x1c8>
    	else if(pGPIOx == GPIOD)
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	4a63      	ldr	r2, [pc, #396]	@ (80003ac <GPIO_ClockControl+0x1e4>)
 8000220:	4293      	cmp	r3, r2
 8000222:	d106      	bne.n	8000232 <GPIO_ClockControl+0x6a>
    	    GPIOD_CLK_EN();
 8000224:	4b5e      	ldr	r3, [pc, #376]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000226:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000228:	4a5d      	ldr	r2, [pc, #372]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 800022a:	f043 0308 	orr.w	r3, r3, #8
 800022e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000230:	e0ae      	b.n	8000390 <GPIO_ClockControl+0x1c8>
    	else if(pGPIOx == GPIOE)
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	4a5e      	ldr	r2, [pc, #376]	@ (80003b0 <GPIO_ClockControl+0x1e8>)
 8000236:	4293      	cmp	r3, r2
 8000238:	d106      	bne.n	8000248 <GPIO_ClockControl+0x80>
    	    GPIOE_CLK_EN();
 800023a:	4b59      	ldr	r3, [pc, #356]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 800023c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800023e:	4a58      	ldr	r2, [pc, #352]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000240:	f043 0310 	orr.w	r3, r3, #16
 8000244:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000246:	e0a3      	b.n	8000390 <GPIO_ClockControl+0x1c8>
    	else if(pGPIOx == GPIOF)
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	4a5a      	ldr	r2, [pc, #360]	@ (80003b4 <GPIO_ClockControl+0x1ec>)
 800024c:	4293      	cmp	r3, r2
 800024e:	d106      	bne.n	800025e <GPIO_ClockControl+0x96>
    	  	GPIOF_CLK_EN();
 8000250:	4b53      	ldr	r3, [pc, #332]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000252:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000254:	4a52      	ldr	r2, [pc, #328]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000256:	f043 0320 	orr.w	r3, r3, #32
 800025a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800025c:	e098      	b.n	8000390 <GPIO_ClockControl+0x1c8>
    	else if(pGPIOx == GPIOG)
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	4a55      	ldr	r2, [pc, #340]	@ (80003b8 <GPIO_ClockControl+0x1f0>)
 8000262:	4293      	cmp	r3, r2
 8000264:	d106      	bne.n	8000274 <GPIO_ClockControl+0xac>
    	   	GPIOG_CLK_EN();
 8000266:	4b4e      	ldr	r3, [pc, #312]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000268:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800026a:	4a4d      	ldr	r2, [pc, #308]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 800026c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000270:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000272:	e08d      	b.n	8000390 <GPIO_ClockControl+0x1c8>
    	else if(pGPIOx == GPIOH)
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	4a51      	ldr	r2, [pc, #324]	@ (80003bc <GPIO_ClockControl+0x1f4>)
 8000278:	4293      	cmp	r3, r2
 800027a:	d106      	bne.n	800028a <GPIO_ClockControl+0xc2>
    	  	GPIOH_CLK_EN();
 800027c:	4b48      	ldr	r3, [pc, #288]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 800027e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000280:	4a47      	ldr	r2, [pc, #284]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000282:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000286:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000288:	e082      	b.n	8000390 <GPIO_ClockControl+0x1c8>
    	else if(pGPIOx == GPIOB)
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	4a45      	ldr	r2, [pc, #276]	@ (80003a4 <GPIO_ClockControl+0x1dc>)
 800028e:	4293      	cmp	r3, r2
 8000290:	d106      	bne.n	80002a0 <GPIO_ClockControl+0xd8>
    	  	GPIOB_CLK_EN();
 8000292:	4b43      	ldr	r3, [pc, #268]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000294:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000296:	4a42      	ldr	r2, [pc, #264]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000298:	f043 0302 	orr.w	r3, r3, #2
 800029c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800029e:	e077      	b.n	8000390 <GPIO_ClockControl+0x1c8>
    	else if(pGPIOx == GPIOI)
 80002a0:	687b      	ldr	r3, [r7, #4]
 80002a2:	4a47      	ldr	r2, [pc, #284]	@ (80003c0 <GPIO_ClockControl+0x1f8>)
 80002a4:	4293      	cmp	r3, r2
 80002a6:	d173      	bne.n	8000390 <GPIO_ClockControl+0x1c8>
    	   GPIOI_CLK_EN();
 80002a8:	4b3d      	ldr	r3, [pc, #244]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 80002aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002ac:	4a3c      	ldr	r2, [pc, #240]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 80002ae:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80002b2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002b4:	e06c      	b.n	8000390 <GPIO_ClockControl+0x1c8>
    	if(pGPIOx == GPIOA)
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	4a38      	ldr	r2, [pc, #224]	@ (800039c <GPIO_ClockControl+0x1d4>)
 80002ba:	4293      	cmp	r3, r2
 80002bc:	d106      	bne.n	80002cc <GPIO_ClockControl+0x104>
    	     GPIOA_CLK_DI();
 80002be:	4b38      	ldr	r3, [pc, #224]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 80002c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002c2:	4a37      	ldr	r2, [pc, #220]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 80002c4:	f023 0301 	bic.w	r3, r3, #1
 80002c8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002ca:	e061      	b.n	8000390 <GPIO_ClockControl+0x1c8>
    	else if(pGPIOx == GPIOB)
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	4a35      	ldr	r2, [pc, #212]	@ (80003a4 <GPIO_ClockControl+0x1dc>)
 80002d0:	4293      	cmp	r3, r2
 80002d2:	d106      	bne.n	80002e2 <GPIO_ClockControl+0x11a>
    	     GPIOB_CLK_DI();
 80002d4:	4b32      	ldr	r3, [pc, #200]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 80002d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002d8:	4a31      	ldr	r2, [pc, #196]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 80002da:	f023 0302 	bic.w	r3, r3, #2
 80002de:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002e0:	e056      	b.n	8000390 <GPIO_ClockControl+0x1c8>
    	else if(pGPIOx == GPIOC)
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	4a30      	ldr	r2, [pc, #192]	@ (80003a8 <GPIO_ClockControl+0x1e0>)
 80002e6:	4293      	cmp	r3, r2
 80002e8:	d106      	bne.n	80002f8 <GPIO_ClockControl+0x130>
    	     GPIOC_CLK_DI();
 80002ea:	4b2d      	ldr	r3, [pc, #180]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 80002ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002ee:	4a2c      	ldr	r2, [pc, #176]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 80002f0:	f023 0304 	bic.w	r3, r3, #4
 80002f4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002f6:	e04b      	b.n	8000390 <GPIO_ClockControl+0x1c8>
       else if(pGPIOx == GPIOD)
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	4a2c      	ldr	r2, [pc, #176]	@ (80003ac <GPIO_ClockControl+0x1e4>)
 80002fc:	4293      	cmp	r3, r2
 80002fe:	d106      	bne.n	800030e <GPIO_ClockControl+0x146>
    	     GPIOD_CLK_DI();
 8000300:	4b27      	ldr	r3, [pc, #156]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000302:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000304:	4a26      	ldr	r2, [pc, #152]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000306:	f023 0308 	bic.w	r3, r3, #8
 800030a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800030c:	e040      	b.n	8000390 <GPIO_ClockControl+0x1c8>
       else if(pGPIOx == GPIOE)
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a27      	ldr	r2, [pc, #156]	@ (80003b0 <GPIO_ClockControl+0x1e8>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_ClockControl+0x15c>
    	      GPIOE_CLK_DI();
 8000316:	4b22      	ldr	r3, [pc, #136]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800031a:	4a21      	ldr	r2, [pc, #132]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 800031c:	f023 0310 	bic.w	r3, r3, #16
 8000320:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000322:	e035      	b.n	8000390 <GPIO_ClockControl+0x1c8>
       else if(pGPIOx == GPIOF)
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a23      	ldr	r2, [pc, #140]	@ (80003b4 <GPIO_ClockControl+0x1ec>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d106      	bne.n	800033a <GPIO_ClockControl+0x172>
    	   	GPIOF_CLK_DI();
 800032c:	4b1c      	ldr	r3, [pc, #112]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000330:	4a1b      	ldr	r2, [pc, #108]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000332:	f023 0320 	bic.w	r3, r3, #32
 8000336:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000338:	e02a      	b.n	8000390 <GPIO_ClockControl+0x1c8>
       else if(pGPIOx == GPIOG)
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4a1e      	ldr	r2, [pc, #120]	@ (80003b8 <GPIO_ClockControl+0x1f0>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d106      	bne.n	8000350 <GPIO_ClockControl+0x188>
    	   	GPIOG_CLK_DI();
 8000342:	4b17      	ldr	r3, [pc, #92]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000344:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000346:	4a16      	ldr	r2, [pc, #88]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000348:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800034c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800034e:	e01f      	b.n	8000390 <GPIO_ClockControl+0x1c8>
       else if(pGPIOx == GPIOH)
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	4a1a      	ldr	r2, [pc, #104]	@ (80003bc <GPIO_ClockControl+0x1f4>)
 8000354:	4293      	cmp	r3, r2
 8000356:	d106      	bne.n	8000366 <GPIO_ClockControl+0x19e>
    	   	GPIOH_CLK_DI();
 8000358:	4b11      	ldr	r3, [pc, #68]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 800035a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800035c:	4a10      	ldr	r2, [pc, #64]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 800035e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000362:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000364:	e014      	b.n	8000390 <GPIO_ClockControl+0x1c8>
       else if(pGPIOx == GPIOB)
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	4a0e      	ldr	r2, [pc, #56]	@ (80003a4 <GPIO_ClockControl+0x1dc>)
 800036a:	4293      	cmp	r3, r2
 800036c:	d106      	bne.n	800037c <GPIO_ClockControl+0x1b4>
    	   	GPIOB_CLK_DI();
 800036e:	4b0c      	ldr	r3, [pc, #48]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000370:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000372:	4a0b      	ldr	r2, [pc, #44]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000374:	f023 0302 	bic.w	r3, r3, #2
 8000378:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800037a:	e009      	b.n	8000390 <GPIO_ClockControl+0x1c8>
       else if(pGPIOx == GPIOI)
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	4a10      	ldr	r2, [pc, #64]	@ (80003c0 <GPIO_ClockControl+0x1f8>)
 8000380:	4293      	cmp	r3, r2
 8000382:	d105      	bne.n	8000390 <GPIO_ClockControl+0x1c8>
    	     GPIOI_CLK_DI();
 8000384:	4b06      	ldr	r3, [pc, #24]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 8000386:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000388:	4a05      	ldr	r2, [pc, #20]	@ (80003a0 <GPIO_ClockControl+0x1d8>)
 800038a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800038e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000390:	bf00      	nop
 8000392:	370c      	adds	r7, #12
 8000394:	46bd      	mov	sp, r7
 8000396:	bc80      	pop	{r7}
 8000398:	4770      	bx	lr
 800039a:	bf00      	nop
 800039c:	40020000 	.word	0x40020000
 80003a0:	40023800 	.word	0x40023800
 80003a4:	40020400 	.word	0x40020400
 80003a8:	40020800 	.word	0x40020800
 80003ac:	40020c00 	.word	0x40020c00
 80003b0:	40021000 	.word	0x40021000
 80003b4:	40021400 	.word	0x40021400
 80003b8:	40021800 	.word	0x40021800
 80003bc:	40021c00 	.word	0x40021c00
 80003c0:	40022000 	.word	0x40022000

080003c4 <GPIO_Init>:

/*
 * GPIO Initialization and GPIO Deinitialization
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003c4:	b480      	push	{r7}
 80003c6:	b085      	sub	sp, #20
 80003c8:	af00      	add	r7, sp, #0
 80003ca:	6078      	str	r0, [r7, #4]
    //1.Configure the mode of GPIO pin
	uint32_t temp=0;
 80003cc:	2300      	movs	r3, #0
 80003ce:	60fb      	str	r3, [r7, #12]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	795b      	ldrb	r3, [r3, #5]
 80003d4:	2b03      	cmp	r3, #3
 80003d6:	d820      	bhi.n	800041a <GPIO_Init+0x56>
	{
		//Non interrupt mode
		temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	795b      	ldrb	r3, [r3, #5]
 80003dc:	461a      	mov	r2, r3
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	791b      	ldrb	r3, [r3, #4]
 80003e2:	005b      	lsls	r3, r3, #1
 80003e4:	fa02 f303 	lsl.w	r3, r2, r3
 80003e8:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &=~(0x3<< 2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);//Clearing the ModeR register
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	681a      	ldr	r2, [r3, #0]
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	791b      	ldrb	r3, [r3, #4]
 80003f4:	005b      	lsls	r3, r3, #1
 80003f6:	2103      	movs	r1, #3
 80003f8:	fa01 f303 	lsl.w	r3, r1, r3
 80003fc:	43db      	mvns	r3, r3
 80003fe:	4619      	mov	r1, r3
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	400a      	ands	r2, r1
 8000406:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //Setting the MODER register
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	6819      	ldr	r1, [r3, #0]
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	68fa      	ldr	r2, [r7, #12]
 8000414:	430a      	orrs	r2, r1
 8000416:	601a      	str	r2, [r3, #0]
 8000418:	e0cb      	b.n	80005b2 <GPIO_Init+0x1ee>
	}
	else
	{
		//Interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	795b      	ldrb	r3, [r3, #5]
 800041e:	2b04      	cmp	r3, #4
 8000420:	d117      	bne.n	8000452 <GPIO_Init+0x8e>
		{
			 //1.Configure FTSR
			EXTI->EXTI_FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000422:	4b4b      	ldr	r3, [pc, #300]	@ (8000550 <GPIO_Init+0x18c>)
 8000424:	68db      	ldr	r3, [r3, #12]
 8000426:	687a      	ldr	r2, [r7, #4]
 8000428:	7912      	ldrb	r2, [r2, #4]
 800042a:	4611      	mov	r1, r2
 800042c:	2201      	movs	r2, #1
 800042e:	408a      	lsls	r2, r1
 8000430:	4611      	mov	r1, r2
 8000432:	4a47      	ldr	r2, [pc, #284]	@ (8000550 <GPIO_Init+0x18c>)
 8000434:	430b      	orrs	r3, r1
 8000436:	60d3      	str	r3, [r2, #12]
			EXTI->EXTI_RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000438:	4b45      	ldr	r3, [pc, #276]	@ (8000550 <GPIO_Init+0x18c>)
 800043a:	689b      	ldr	r3, [r3, #8]
 800043c:	687a      	ldr	r2, [r7, #4]
 800043e:	7912      	ldrb	r2, [r2, #4]
 8000440:	4611      	mov	r1, r2
 8000442:	2201      	movs	r2, #1
 8000444:	408a      	lsls	r2, r1
 8000446:	43d2      	mvns	r2, r2
 8000448:	4611      	mov	r1, r2
 800044a:	4a41      	ldr	r2, [pc, #260]	@ (8000550 <GPIO_Init+0x18c>)
 800044c:	400b      	ands	r3, r1
 800044e:	6093      	str	r3, [r2, #8]
 8000450:	e035      	b.n	80004be <GPIO_Init+0xfa>

		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	795b      	ldrb	r3, [r3, #5]
 8000456:	2b05      	cmp	r3, #5
 8000458:	d117      	bne.n	800048a <GPIO_Init+0xc6>
		{
			//1.Configure RTSR
			EXTI->EXTI_RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800045a:	4b3d      	ldr	r3, [pc, #244]	@ (8000550 <GPIO_Init+0x18c>)
 800045c:	689b      	ldr	r3, [r3, #8]
 800045e:	687a      	ldr	r2, [r7, #4]
 8000460:	7912      	ldrb	r2, [r2, #4]
 8000462:	4611      	mov	r1, r2
 8000464:	2201      	movs	r2, #1
 8000466:	408a      	lsls	r2, r1
 8000468:	4611      	mov	r1, r2
 800046a:	4a39      	ldr	r2, [pc, #228]	@ (8000550 <GPIO_Init+0x18c>)
 800046c:	430b      	orrs	r3, r1
 800046e:	6093      	str	r3, [r2, #8]
			EXTI->EXTI_FTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000470:	4b37      	ldr	r3, [pc, #220]	@ (8000550 <GPIO_Init+0x18c>)
 8000472:	68db      	ldr	r3, [r3, #12]
 8000474:	687a      	ldr	r2, [r7, #4]
 8000476:	7912      	ldrb	r2, [r2, #4]
 8000478:	4611      	mov	r1, r2
 800047a:	2201      	movs	r2, #1
 800047c:	408a      	lsls	r2, r1
 800047e:	43d2      	mvns	r2, r2
 8000480:	4611      	mov	r1, r2
 8000482:	4a33      	ldr	r2, [pc, #204]	@ (8000550 <GPIO_Init+0x18c>)
 8000484:	400b      	ands	r3, r1
 8000486:	60d3      	str	r3, [r2, #12]
 8000488:	e019      	b.n	80004be <GPIO_Init+0xfa>

		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FRT)
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	795b      	ldrb	r3, [r3, #5]
 800048e:	2b06      	cmp	r3, #6
 8000490:	d115      	bne.n	80004be <GPIO_Init+0xfa>
		{
			//1.Configure FTSR and RTSR
			EXTI->EXTI_FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000492:	4b2f      	ldr	r3, [pc, #188]	@ (8000550 <GPIO_Init+0x18c>)
 8000494:	68db      	ldr	r3, [r3, #12]
 8000496:	687a      	ldr	r2, [r7, #4]
 8000498:	7912      	ldrb	r2, [r2, #4]
 800049a:	4611      	mov	r1, r2
 800049c:	2201      	movs	r2, #1
 800049e:	408a      	lsls	r2, r1
 80004a0:	4611      	mov	r1, r2
 80004a2:	4a2b      	ldr	r2, [pc, #172]	@ (8000550 <GPIO_Init+0x18c>)
 80004a4:	430b      	orrs	r3, r1
 80004a6:	60d3      	str	r3, [r2, #12]
			EXTI->EXTI_RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004a8:	4b29      	ldr	r3, [pc, #164]	@ (8000550 <GPIO_Init+0x18c>)
 80004aa:	689b      	ldr	r3, [r3, #8]
 80004ac:	687a      	ldr	r2, [r7, #4]
 80004ae:	7912      	ldrb	r2, [r2, #4]
 80004b0:	4611      	mov	r1, r2
 80004b2:	2201      	movs	r2, #1
 80004b4:	408a      	lsls	r2, r1
 80004b6:	4611      	mov	r1, r2
 80004b8:	4a25      	ldr	r2, [pc, #148]	@ (8000550 <GPIO_Init+0x18c>)
 80004ba:	430b      	orrs	r3, r1
 80004bc:	6093      	str	r3, [r2, #8]
		}
		//2.configure the GPIO port selection in SYSCFG_EXTICR
         uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	791b      	ldrb	r3, [r3, #4]
 80004c2:	089b      	lsrs	r3, r3, #2
 80004c4:	72fb      	strb	r3, [r7, #11]
         uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %4;
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	791b      	ldrb	r3, [r3, #4]
 80004ca:	f003 0303 	and.w	r3, r3, #3
 80004ce:	72bb      	strb	r3, [r7, #10]
         uint8_t  port_code = GPIO_BASE_ADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	4a1f      	ldr	r2, [pc, #124]	@ (8000554 <GPIO_Init+0x190>)
 80004d6:	4293      	cmp	r3, r2
 80004d8:	d04e      	beq.n	8000578 <GPIO_Init+0x1b4>
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	4a1e      	ldr	r2, [pc, #120]	@ (8000558 <GPIO_Init+0x194>)
 80004e0:	4293      	cmp	r3, r2
 80004e2:	d032      	beq.n	800054a <GPIO_Init+0x186>
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	4a1c      	ldr	r2, [pc, #112]	@ (800055c <GPIO_Init+0x198>)
 80004ea:	4293      	cmp	r3, r2
 80004ec:	d02b      	beq.n	8000546 <GPIO_Init+0x182>
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	4a1b      	ldr	r2, [pc, #108]	@ (8000560 <GPIO_Init+0x19c>)
 80004f4:	4293      	cmp	r3, r2
 80004f6:	d024      	beq.n	8000542 <GPIO_Init+0x17e>
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	4a19      	ldr	r2, [pc, #100]	@ (8000564 <GPIO_Init+0x1a0>)
 80004fe:	4293      	cmp	r3, r2
 8000500:	d01d      	beq.n	800053e <GPIO_Init+0x17a>
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	4a18      	ldr	r2, [pc, #96]	@ (8000568 <GPIO_Init+0x1a4>)
 8000508:	4293      	cmp	r3, r2
 800050a:	d016      	beq.n	800053a <GPIO_Init+0x176>
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	4a16      	ldr	r2, [pc, #88]	@ (800056c <GPIO_Init+0x1a8>)
 8000512:	4293      	cmp	r3, r2
 8000514:	d00f      	beq.n	8000536 <GPIO_Init+0x172>
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	4a15      	ldr	r2, [pc, #84]	@ (8000570 <GPIO_Init+0x1ac>)
 800051c:	4293      	cmp	r3, r2
 800051e:	d008      	beq.n	8000532 <GPIO_Init+0x16e>
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	4a13      	ldr	r2, [pc, #76]	@ (8000574 <GPIO_Init+0x1b0>)
 8000526:	4293      	cmp	r3, r2
 8000528:	d101      	bne.n	800052e <GPIO_Init+0x16a>
 800052a:	2308      	movs	r3, #8
 800052c:	e025      	b.n	800057a <GPIO_Init+0x1b6>
 800052e:	2300      	movs	r3, #0
 8000530:	e023      	b.n	800057a <GPIO_Init+0x1b6>
 8000532:	2307      	movs	r3, #7
 8000534:	e021      	b.n	800057a <GPIO_Init+0x1b6>
 8000536:	2306      	movs	r3, #6
 8000538:	e01f      	b.n	800057a <GPIO_Init+0x1b6>
 800053a:	2305      	movs	r3, #5
 800053c:	e01d      	b.n	800057a <GPIO_Init+0x1b6>
 800053e:	2304      	movs	r3, #4
 8000540:	e01b      	b.n	800057a <GPIO_Init+0x1b6>
 8000542:	2303      	movs	r3, #3
 8000544:	e019      	b.n	800057a <GPIO_Init+0x1b6>
 8000546:	2302      	movs	r3, #2
 8000548:	e017      	b.n	800057a <GPIO_Init+0x1b6>
 800054a:	2301      	movs	r3, #1
 800054c:	e015      	b.n	800057a <GPIO_Init+0x1b6>
 800054e:	bf00      	nop
 8000550:	40013c00 	.word	0x40013c00
 8000554:	40020000 	.word	0x40020000
 8000558:	40020400 	.word	0x40020400
 800055c:	40020800 	.word	0x40020800
 8000560:	40020c00 	.word	0x40020c00
 8000564:	40021000 	.word	0x40021000
 8000568:	40021400 	.word	0x40021400
 800056c:	40021800 	.word	0x40021800
 8000570:	40021c00 	.word	0x40021c00
 8000574:	40022000 	.word	0x40022000
 8000578:	2300      	movs	r3, #0
 800057a:	727b      	strb	r3, [r7, #9]
         SYSCFG_CLK_EN();
 800057c:	4b67      	ldr	r3, [pc, #412]	@ (800071c <GPIO_Init+0x358>)
 800057e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000580:	4a66      	ldr	r2, [pc, #408]	@ (800071c <GPIO_Init+0x358>)
 8000582:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000586:	6453      	str	r3, [r2, #68]	@ 0x44
         SYSCFG->SYSCFG_EXTICR[temp1] = (port_code<<(temp2*4));
 8000588:	7a7a      	ldrb	r2, [r7, #9]
 800058a:	7abb      	ldrb	r3, [r7, #10]
 800058c:	009b      	lsls	r3, r3, #2
 800058e:	fa02 f103 	lsl.w	r1, r2, r3
 8000592:	4a63      	ldr	r2, [pc, #396]	@ (8000720 <GPIO_Init+0x35c>)
 8000594:	7afb      	ldrb	r3, [r7, #11]
 8000596:	3302      	adds	r3, #2
 8000598:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		//3.Enable the exti interrupt delivery using IMR
         EXTI->EXTI_IMR |=(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800059c:	4b61      	ldr	r3, [pc, #388]	@ (8000724 <GPIO_Init+0x360>)
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	687a      	ldr	r2, [r7, #4]
 80005a2:	7912      	ldrb	r2, [r2, #4]
 80005a4:	4611      	mov	r1, r2
 80005a6:	2201      	movs	r2, #1
 80005a8:	408a      	lsls	r2, r1
 80005aa:	4611      	mov	r1, r2
 80005ac:	4a5d      	ldr	r2, [pc, #372]	@ (8000724 <GPIO_Init+0x360>)
 80005ae:	430b      	orrs	r3, r1
 80005b0:	6013      	str	r3, [r2, #0]

	}
	temp=0;
 80005b2:	2300      	movs	r3, #0
 80005b4:	60fb      	str	r3, [r7, #12]
	//2.Configure the speed

     temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	799b      	ldrb	r3, [r3, #6]
 80005ba:	461a      	mov	r2, r3
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	791b      	ldrb	r3, [r3, #4]
 80005c0:	005b      	lsls	r3, r3, #1
 80005c2:	fa02 f303 	lsl.w	r3, r2, r3
 80005c6:	60fb      	str	r3, [r7, #12]
     pGPIOHandle->pGPIOx->OSPEEDR &=~(0x3<< 2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);//Clearing the ModeR register
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	689a      	ldr	r2, [r3, #8]
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	791b      	ldrb	r3, [r3, #4]
 80005d2:	005b      	lsls	r3, r3, #1
 80005d4:	2103      	movs	r1, #3
 80005d6:	fa01 f303 	lsl.w	r3, r1, r3
 80005da:	43db      	mvns	r3, r3
 80005dc:	4619      	mov	r1, r3
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	400a      	ands	r2, r1
 80005e4:	609a      	str	r2, [r3, #8]
     pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	6899      	ldr	r1, [r3, #8]
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	68fa      	ldr	r2, [r7, #12]
 80005f2:	430a      	orrs	r2, r1
 80005f4:	609a      	str	r2, [r3, #8]
     temp=0;
 80005f6:	2300      	movs	r3, #0
 80005f8:	60fb      	str	r3, [r7, #12]

     //3.Configure the pull up and pull down
     temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	79db      	ldrb	r3, [r3, #7]
 80005fe:	461a      	mov	r2, r3
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	791b      	ldrb	r3, [r3, #4]
 8000604:	005b      	lsls	r3, r3, #1
 8000606:	fa02 f303 	lsl.w	r3, r2, r3
 800060a:	60fb      	str	r3, [r7, #12]
     pGPIOHandle->pGPIOx->PUPDR &=~(0x3<< 2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);//Clearing the ModeR register
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	68da      	ldr	r2, [r3, #12]
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	791b      	ldrb	r3, [r3, #4]
 8000616:	005b      	lsls	r3, r3, #1
 8000618:	2103      	movs	r1, #3
 800061a:	fa01 f303 	lsl.w	r3, r1, r3
 800061e:	43db      	mvns	r3, r3
 8000620:	4619      	mov	r1, r3
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	400a      	ands	r2, r1
 8000628:	60da      	str	r2, [r3, #12]
     pGPIOHandle->pGPIOx->PUPDR |= temp;
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	681b      	ldr	r3, [r3, #0]
 800062e:	68d9      	ldr	r1, [r3, #12]
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	68fa      	ldr	r2, [r7, #12]
 8000636:	430a      	orrs	r2, r1
 8000638:	60da      	str	r2, [r3, #12]
     temp=0;
 800063a:	2300      	movs	r3, #0
 800063c:	60fb      	str	r3, [r7, #12]

     //4.Configure the output type of a register
     temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinOpType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	7a1b      	ldrb	r3, [r3, #8]
 8000642:	461a      	mov	r2, r3
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	791b      	ldrb	r3, [r3, #4]
 8000648:	fa02 f303 	lsl.w	r3, r2, r3
 800064c:	60fb      	str	r3, [r7, #12]
     pGPIOHandle->pGPIOx->OTYPER &=~(0x1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	681b      	ldr	r3, [r3, #0]
 8000652:	685a      	ldr	r2, [r3, #4]
 8000654:	687b      	ldr	r3, [r7, #4]
 8000656:	791b      	ldrb	r3, [r3, #4]
 8000658:	4619      	mov	r1, r3
 800065a:	2301      	movs	r3, #1
 800065c:	408b      	lsls	r3, r1
 800065e:	43db      	mvns	r3, r3
 8000660:	4619      	mov	r1, r3
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	681b      	ldr	r3, [r3, #0]
 8000666:	400a      	ands	r2, r1
 8000668:	605a      	str	r2, [r3, #4]
     pGPIOHandle->pGPIOx->OTYPER |= temp;
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	681b      	ldr	r3, [r3, #0]
 800066e:	6859      	ldr	r1, [r3, #4]
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	681b      	ldr	r3, [r3, #0]
 8000674:	68fa      	ldr	r2, [r7, #12]
 8000676:	430a      	orrs	r2, r1
 8000678:	605a      	str	r2, [r3, #4]
     temp=0;
 800067a:	2300      	movs	r3, #0
 800067c:	60fb      	str	r3, [r7, #12]

     //4.Configure Atlernate functionality
     if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==  GPIO_MODE_ALTFN)
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	795b      	ldrb	r3, [r3, #5]
 8000682:	2b02      	cmp	r3, #2
 8000684:	d144      	bne.n	8000710 <GPIO_Init+0x34c>
     {

     if(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber <= 7)
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	791b      	ldrb	r3, [r3, #4]
 800068a:	2b07      	cmp	r3, #7
 800068c:	d820      	bhi.n	80006d0 <GPIO_Init+0x30c>
     {
    	 //Alternate functionality low register
    	 temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800068e:	687b      	ldr	r3, [r7, #4]
 8000690:	7a5b      	ldrb	r3, [r3, #9]
 8000692:	461a      	mov	r2, r3
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	791b      	ldrb	r3, [r3, #4]
 8000698:	009b      	lsls	r3, r3, #2
 800069a:	fa02 f303 	lsl.w	r3, r2, r3
 800069e:	60fb      	str	r3, [r7, #12]
    	 pGPIOHandle->pGPIOx->AFRL &=~(0xF<< 4*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	6a1a      	ldr	r2, [r3, #32]
 80006a6:	687b      	ldr	r3, [r7, #4]
 80006a8:	791b      	ldrb	r3, [r3, #4]
 80006aa:	009b      	lsls	r3, r3, #2
 80006ac:	210f      	movs	r1, #15
 80006ae:	fa01 f303 	lsl.w	r3, r1, r3
 80006b2:	43db      	mvns	r3, r3
 80006b4:	4619      	mov	r1, r3
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	681b      	ldr	r3, [r3, #0]
 80006ba:	400a      	ands	r2, r1
 80006bc:	621a      	str	r2, [r3, #32]
    	 pGPIOHandle->pGPIOx->AFRL |= temp;
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	681b      	ldr	r3, [r3, #0]
 80006c2:	6a19      	ldr	r1, [r3, #32]
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	681b      	ldr	r3, [r3, #0]
 80006c8:	68fa      	ldr	r2, [r7, #12]
 80006ca:	430a      	orrs	r2, r1
 80006cc:	621a      	str	r2, [r3, #32]
    	 pGPIOHandle->pGPIOx->AFRH &=~(0xF<< 4*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
    	 pGPIOHandle->pGPIOx->AFRH |= temp;
     }
     }

}
 80006ce:	e01f      	b.n	8000710 <GPIO_Init+0x34c>
    	 temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	7a5b      	ldrb	r3, [r3, #9]
 80006d4:	461a      	mov	r2, r3
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	791b      	ldrb	r3, [r3, #4]
 80006da:	009b      	lsls	r3, r3, #2
 80006dc:	fa02 f303 	lsl.w	r3, r2, r3
 80006e0:	60fb      	str	r3, [r7, #12]
    	 pGPIOHandle->pGPIOx->AFRH &=~(0xF<< 4*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	681b      	ldr	r3, [r3, #0]
 80006e6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	791b      	ldrb	r3, [r3, #4]
 80006ec:	009b      	lsls	r3, r3, #2
 80006ee:	210f      	movs	r1, #15
 80006f0:	fa01 f303 	lsl.w	r3, r1, r3
 80006f4:	43db      	mvns	r3, r3
 80006f6:	4619      	mov	r1, r3
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	681b      	ldr	r3, [r3, #0]
 80006fc:	400a      	ands	r2, r1
 80006fe:	625a      	str	r2, [r3, #36]	@ 0x24
    	 pGPIOHandle->pGPIOx->AFRH |= temp;
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	681b      	ldr	r3, [r3, #0]
 8000704:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	681b      	ldr	r3, [r3, #0]
 800070a:	68fa      	ldr	r2, [r7, #12]
 800070c:	430a      	orrs	r2, r1
 800070e:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8000710:	bf00      	nop
 8000712:	3714      	adds	r7, #20
 8000714:	46bd      	mov	sp, r7
 8000716:	bc80      	pop	{r7}
 8000718:	4770      	bx	lr
 800071a:	bf00      	nop
 800071c:	40023800 	.word	0x40023800
 8000720:	40013800 	.word	0x40013800
 8000724:	40013c00 	.word	0x40013c00

08000728 <GPIO_ReadFromInputPin>:
/*
 * Data read and write Macros
 */

uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000728:	b480      	push	{r7}
 800072a:	b085      	sub	sp, #20
 800072c:	af00      	add	r7, sp, #0
 800072e:	6078      	str	r0, [r7, #4]
 8000730:	460b      	mov	r3, r1
 8000732:	70fb      	strb	r3, [r7, #3]
	  uint8_t value ;
	  value = (uint8_t)(pGPIOx->IDR >> PinNumber) & (0x00000001);
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	691a      	ldr	r2, [r3, #16]
 8000738:	78fb      	ldrb	r3, [r7, #3]
 800073a:	fa22 f303 	lsr.w	r3, r2, r3
 800073e:	b2db      	uxtb	r3, r3
 8000740:	f003 0301 	and.w	r3, r3, #1
 8000744:	73fb      	strb	r3, [r7, #15]
	  return value;
 8000746:	7bfb      	ldrb	r3, [r7, #15]

}
 8000748:	4618      	mov	r0, r3
 800074a:	3714      	adds	r7, #20
 800074c:	46bd      	mov	sp, r7
 800074e:	bc80      	pop	{r7}
 8000750:	4770      	bx	lr

08000752 <GPIO_TogglePin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t value)
{
	pGPIOx->ODR = value;
}
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000752:	b480      	push	{r7}
 8000754:	b083      	sub	sp, #12
 8000756:	af00      	add	r7, sp, #0
 8000758:	6078      	str	r0, [r7, #4]
 800075a:	460b      	mov	r3, r1
 800075c:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	695b      	ldr	r3, [r3, #20]
 8000762:	78fa      	ldrb	r2, [r7, #3]
 8000764:	2101      	movs	r1, #1
 8000766:	fa01 f202 	lsl.w	r2, r1, r2
 800076a:	405a      	eors	r2, r3
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	615a      	str	r2, [r3, #20]
}
 8000770:	bf00      	nop
 8000772:	370c      	adds	r7, #12
 8000774:	46bd      	mov	sp, r7
 8000776:	bc80      	pop	{r7}
 8000778:	4770      	bx	lr
	...

0800077c <delay>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

void delay()
{
 800077c:	b480      	push	{r7}
 800077e:	b083      	sub	sp, #12
 8000780:	af00      	add	r7, sp, #0
	for(uint32_t i=0;i<500000;i++);
 8000782:	2300      	movs	r3, #0
 8000784:	607b      	str	r3, [r7, #4]
 8000786:	e002      	b.n	800078e <delay+0x12>
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	3301      	adds	r3, #1
 800078c:	607b      	str	r3, [r7, #4]
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	4a04      	ldr	r2, [pc, #16]	@ (80007a4 <delay+0x28>)
 8000792:	4293      	cmp	r3, r2
 8000794:	d9f8      	bls.n	8000788 <delay+0xc>
}
 8000796:	bf00      	nop
 8000798:	bf00      	nop
 800079a:	370c      	adds	r7, #12
 800079c:	46bd      	mov	sp, r7
 800079e:	bc80      	pop	{r7}
 80007a0:	4770      	bx	lr
 80007a2:	bf00      	nop
 80007a4:	0007a11f 	.word	0x0007a11f

080007a8 <main>:

int main(void)

{
 80007a8:	b580      	push	{r7, lr}
 80007aa:	b086      	sub	sp, #24
 80007ac:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOLed,GPIOBtn;
		GPIOLed.pGPIOx = GPIOD;
 80007ae:	4b1a      	ldr	r3, [pc, #104]	@ (8000818 <main+0x70>)
 80007b0:	60fb      	str	r3, [r7, #12]
		GPIOLed.GPIO_PinConfig.GPIO_PinNumber = GIPO_PIN_NO_12 ;
 80007b2:	230c      	movs	r3, #12
 80007b4:	743b      	strb	r3, [r7, #16]
		GPIOLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80007b6:	2301      	movs	r3, #1
 80007b8:	747b      	strb	r3, [r7, #17]
		GPIOLed.GPIO_PinConfig.GPIO_PinOpType = OUTPUT_PUPL ;
 80007ba:	2300      	movs	r3, #0
 80007bc:	753b      	strb	r3, [r7, #20]
		GPIOLed.GPIO_PinConfig.GPIO_PinPuPdControl = NO_PUPD ;
 80007be:	2300      	movs	r3, #0
 80007c0:	74fb      	strb	r3, [r7, #19]
		GPIOLed.GPIO_PinConfig.GPIO_PinSpeed = VHG_SPD ;
 80007c2:	2303      	movs	r3, #3
 80007c4:	74bb      	strb	r3, [r7, #18]

		GPIO_ClockControl(GPIOD , ENABLE);
 80007c6:	2101      	movs	r1, #1
 80007c8:	4813      	ldr	r0, [pc, #76]	@ (8000818 <main+0x70>)
 80007ca:	f7ff fcfd 	bl	80001c8 <GPIO_ClockControl>
		GPIO_Init(&GPIOLed);
 80007ce:	f107 030c 	add.w	r3, r7, #12
 80007d2:	4618      	mov	r0, r3
 80007d4:	f7ff fdf6 	bl	80003c4 <GPIO_Init>

		GPIOBtn.pGPIOx = GPIOA;
 80007d8:	4b10      	ldr	r3, [pc, #64]	@ (800081c <main+0x74>)
 80007da:	603b      	str	r3, [r7, #0]
		GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GIPO_PIN_NO_0 ;
 80007dc:	2300      	movs	r3, #0
 80007de:	713b      	strb	r3, [r7, #4]
		GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 80007e0:	2300      	movs	r3, #0
 80007e2:	717b      	strb	r3, [r7, #5]
		GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = NO_PUPD ;
 80007e4:	2300      	movs	r3, #0
 80007e6:	71fb      	strb	r3, [r7, #7]
		GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = VHG_SPD ;
 80007e8:	2303      	movs	r3, #3
 80007ea:	71bb      	strb	r3, [r7, #6]
		GPIO_ClockControl(GPIOA , ENABLE);
 80007ec:	2101      	movs	r1, #1
 80007ee:	480b      	ldr	r0, [pc, #44]	@ (800081c <main+0x74>)
 80007f0:	f7ff fcea 	bl	80001c8 <GPIO_ClockControl>
	    GPIO_Init(&GPIOBtn);
 80007f4:	463b      	mov	r3, r7
 80007f6:	4618      	mov	r0, r3
 80007f8:	f7ff fde4 	bl	80003c4 <GPIO_Init>
		while(1)
		{
			if(GPIO_ReadFromInputPin(GPIOA,GIPO_PIN_NO_0))
 80007fc:	2100      	movs	r1, #0
 80007fe:	4807      	ldr	r0, [pc, #28]	@ (800081c <main+0x74>)
 8000800:	f7ff ff92 	bl	8000728 <GPIO_ReadFromInputPin>
 8000804:	4603      	mov	r3, r0
 8000806:	2b00      	cmp	r3, #0
 8000808:	d0f8      	beq.n	80007fc <main+0x54>
			{
				delay();
 800080a:	f7ff ffb7 	bl	800077c <delay>
				GPIO_TogglePin(GPIOD, GIPO_PIN_NO_12);
 800080e:	210c      	movs	r1, #12
 8000810:	4801      	ldr	r0, [pc, #4]	@ (8000818 <main+0x70>)
 8000812:	f7ff ff9e 	bl	8000752 <GPIO_TogglePin>
			if(GPIO_ReadFromInputPin(GPIOA,GIPO_PIN_NO_0))
 8000816:	e7f1      	b.n	80007fc <main+0x54>
 8000818:	40020c00 	.word	0x40020c00
 800081c:	40020000 	.word	0x40020000

08000820 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000820:	480d      	ldr	r0, [pc, #52]	@ (8000858 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000822:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000824:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000828:	480c      	ldr	r0, [pc, #48]	@ (800085c <LoopForever+0x6>)
  ldr r1, =_edata
 800082a:	490d      	ldr	r1, [pc, #52]	@ (8000860 <LoopForever+0xa>)
  ldr r2, =_sidata
 800082c:	4a0d      	ldr	r2, [pc, #52]	@ (8000864 <LoopForever+0xe>)
  movs r3, #0
 800082e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000830:	e002      	b.n	8000838 <LoopCopyDataInit>

08000832 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000832:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000834:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000836:	3304      	adds	r3, #4

08000838 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000838:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800083a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800083c:	d3f9      	bcc.n	8000832 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800083e:	4a0a      	ldr	r2, [pc, #40]	@ (8000868 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000840:	4c0a      	ldr	r4, [pc, #40]	@ (800086c <LoopForever+0x16>)
  movs r3, #0
 8000842:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000844:	e001      	b.n	800084a <LoopFillZerobss>

08000846 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000846:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000848:	3204      	adds	r2, #4

0800084a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800084a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800084c:	d3fb      	bcc.n	8000846 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800084e:	f000 f811 	bl	8000874 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000852:	f7ff ffa9 	bl	80007a8 <main>

08000856 <LoopForever>:

LoopForever:
  b LoopForever
 8000856:	e7fe      	b.n	8000856 <LoopForever>
  ldr   r0, =_estack
 8000858:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800085c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000860:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000864:	080008dc 	.word	0x080008dc
  ldr r2, =_sbss
 8000868:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800086c:	2000001c 	.word	0x2000001c

08000870 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000870:	e7fe      	b.n	8000870 <ADC_IRQHandler>
	...

08000874 <__libc_init_array>:
 8000874:	b570      	push	{r4, r5, r6, lr}
 8000876:	4d0d      	ldr	r5, [pc, #52]	@ (80008ac <__libc_init_array+0x38>)
 8000878:	4c0d      	ldr	r4, [pc, #52]	@ (80008b0 <__libc_init_array+0x3c>)
 800087a:	1b64      	subs	r4, r4, r5
 800087c:	10a4      	asrs	r4, r4, #2
 800087e:	2600      	movs	r6, #0
 8000880:	42a6      	cmp	r6, r4
 8000882:	d109      	bne.n	8000898 <__libc_init_array+0x24>
 8000884:	4d0b      	ldr	r5, [pc, #44]	@ (80008b4 <__libc_init_array+0x40>)
 8000886:	4c0c      	ldr	r4, [pc, #48]	@ (80008b8 <__libc_init_array+0x44>)
 8000888:	f000 f818 	bl	80008bc <_init>
 800088c:	1b64      	subs	r4, r4, r5
 800088e:	10a4      	asrs	r4, r4, #2
 8000890:	2600      	movs	r6, #0
 8000892:	42a6      	cmp	r6, r4
 8000894:	d105      	bne.n	80008a2 <__libc_init_array+0x2e>
 8000896:	bd70      	pop	{r4, r5, r6, pc}
 8000898:	f855 3b04 	ldr.w	r3, [r5], #4
 800089c:	4798      	blx	r3
 800089e:	3601      	adds	r6, #1
 80008a0:	e7ee      	b.n	8000880 <__libc_init_array+0xc>
 80008a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80008a6:	4798      	blx	r3
 80008a8:	3601      	adds	r6, #1
 80008aa:	e7f2      	b.n	8000892 <__libc_init_array+0x1e>
 80008ac:	080008d4 	.word	0x080008d4
 80008b0:	080008d4 	.word	0x080008d4
 80008b4:	080008d4 	.word	0x080008d4
 80008b8:	080008d8 	.word	0x080008d8

080008bc <_init>:
 80008bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008be:	bf00      	nop
 80008c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008c2:	bc08      	pop	{r3}
 80008c4:	469e      	mov	lr, r3
 80008c6:	4770      	bx	lr

080008c8 <_fini>:
 80008c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ca:	bf00      	nop
 80008cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008ce:	bc08      	pop	{r3}
 80008d0:	469e      	mov	lr, r3
 80008d2:	4770      	bx	lr
